version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Passw0rd
      - MSSQL_PID=Developer
    ports:
      - 1433:1433
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Passw0rd -Q 'SELECT 1' -C"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
  sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2022-latest
    volumes:
      - ./init-sql:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    command: >
      /bin/bash -c '
      /opt/mssql-tools18/bin/sqlcmd -S sqlserver -U sa -P Passw0rd -d master -i /docker-entrypoint-initdb.d/create_database.sql -C;
      /opt/mssql-tools18/bin/sqlcmd -S sqlserver -U sa -P Passw0rd -d master -i /docker-entrypoint-initdb.d/create_tables.sql -C;
      /opt/mssql-tools18/bin/sqlcmd -S sqlserver -U sa -P Passw0rd -d master -i /docker-entrypoint-initdb.d/insert_value.sql -C;
      echo "All done!"
      '

  coindeskapi:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;database=CoindeskDB;User Id=sa;Password=Passw0rd;TrustServerCertificate=True;
    ports:
      - "8080:8080"
    depends_on:
      sqlserver:
        condition: service_healthy